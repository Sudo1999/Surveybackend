spring.datasource.url = jdbc:mysql://127.0.0.1:3336/post_suivi_stagiaire
#spring.datasource.url = jdbc:postgresql://127.0.0.1:5432/dbpoe
# Le port 3336 est réservé par Docker
# Soit root soit poe (défini dans Docker dans .env) :
spring.datasource.username = root
spring.datasource.password = root

# Ajout de l'authentification :
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
# Secret key - should be encrypted
jwt.secret = secretkey
# 3 minutes validity = 180000 => 18000000 pour 5 heures
jwt.token.validity = 18000000
# Ignore null fields in json
spring.jackson.default-property-inclusion = NON_NULL
# SQL related : Log du SQL statement et formatage pour une meilleure lecture dans la console
# Pour voir les commandes sql :
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql = true
logging.level.org.hibernate.type.descriptor.sql = trace

# Ajout en plus (sans lui l'application ne se lance pas) :
spring.main.allow-circular-references = true

# Précédent à l'exercice :
spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto = update
# Options DDL Auto: none, create, create-drop, update, validate
# Ce serait 'create' si on voulait que la classe entity crée la base (ici elle est déjà faite => 'none' est possible aussi)

# Problème avec les tests => on le commente dans l'application.properties des tests
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
